Emergency rollback & stabilization before continuing Step 2

Message:

Stop and stabilize first.

The build/regression after Step 2 is unacceptable. Do the following immediately and do not proceed with any further refactor until these are done and proven green.

Phase A — Roll back & get green:

Create a hotfix branch off main.

Revert all Step-2 storage refactor edits back to the last green commit on main (the commit where npx tsc --noEmit was 0 and npm run build succeeded). If a true revert isn’t possible, restore the previous files exactly as they were.

Verify locally and post evidence:

node -v && npm -v

npx tsc --noEmit → must be 0 errors (paste the full count line).

npm run build → must succeed (paste the last 20 lines).

App boots, and these smoke flows work: login, create PO, stock move, sales order create, shipment create, submit approval (paste the HTTP 200 logs for each).

Only after green is restored, merge the hotfix to main.

Phase B — Safe re-attempt of Step 2 (slice by slice):
We will not accept big-bang changes. Implement the storage split in small PRs with zero TypeScript errors per PR.

Guardrails (apply to every PR):

No any, no @ts-ignore, no silencing.

0 TS errors: npx tsc --noEmit must be zero for the repo.

No API/route changes (contracts identical).

Tests: at least a smoke test for the domain flows you touch.

Evidence required in PR description:

Before/after file error counts (per file).

Commands output: npx tsc --noEmit, npm run build.

List of imports updated (search/replace summary).

List of symbols removed from legacy storage files.

Execution plan (strict order):

PR 1 (Scaffold only): add server/domains/* structure + shared/base/BaseRepository.ts and BaseService.ts. No behavior changes. TS/build must be green.

PR 2 (Purchases domain): move only Purchases DB calls to purchases/repository.ts and logic to purchases/service.ts. Update imports. Green build, tests pass.

PR 3 (Warehouse domain): same pattern for Warehouse (stock/moves/transfers/scoping). Green build, tests.

PR 4 (Sales), then Inventory, Approvals, Users, Notifications (move scheduler DB ops under this domain), Documents, Shipping, Capital, Analytics (read-only).

Final PR: delete server/storage.ts & server/core/storage.ts, clean repo-wide imports, final green build.

Do not return until:

Main is green again after Phase A.

Each PR you submit adheres to the guardrails above with pasted evidence.

You run static analysis with OpenAI ChatGPT-5 on each PR for type/gap detection and include the summary.

Proceed.