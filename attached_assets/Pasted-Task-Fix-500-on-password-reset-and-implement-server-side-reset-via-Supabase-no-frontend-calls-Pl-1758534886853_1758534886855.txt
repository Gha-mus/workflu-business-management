Task: Fix 500 on password reset and implement server-side reset via Supabase (no frontend calls)

Please handle the entire password-reset flow on the server (Replit) and remove any frontend calls. The current UI shows:

Reset Failed
500: {"success":false,"code":"internal_error","message":"Failed to initiate password reset"}

Objectives

Replace any auth.resetPasswordForEmail server calls with admin link generation using the service role and send the email via our SMTP.

Keep all business logic unchanged; only fix the reset flow and 500 errors.

Return precise error messages (429/400) instead of masking everything as 500.

Implementation (server only)

Use the service-role client:

import { createClient } from '@supabase/supabase-js'
const supabaseAdmin = createClient(
  process.env.SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!,
  { auth: { autoRefreshToken: false, persistSession: false } }
)


In POST /api/admin/users/:id/reset-password:

Look up the user email (or accept it in body after validating RBAC).

Generate a recovery link:

const { data, error } = await supabaseAdmin.auth.admin.generateLink({
  type: 'recovery',
  email,
  options: { redirectTo: `${process.env.SITE_URL}/auth/reset` }
})
if (error) return res.status(error.status ?? 400).json({ success:false, code:'supabase_error', message:error.message })
const resetUrl = data?.properties?.action_link
if (!resetUrl) return res.status(500).json({ success:false, code:'no_link', message:'Recovery link not generated' })


Send the email via our SMTP transporter (already configured from env SMTP_HOST/PORT/USER/PASS/SMTP_FROM).
If SMTP_FROM is absent, default to SMTP_USER.

Respond with { success:true }.

Middleware:

Ensure this route is admin-only, but does not require a Supabase end-user session token (service-role is sufficient). Avoid blocking it with session middleware that causes 401/500.

Environment & Config to verify (do not change names)

SUPABASE_URL

SUPABASE_SERVICE_ROLE_KEY

SMTP_HOST = smtp.gmail.com

SMTP_PORT = 587

SMTP_USER = addworkflu@gmail.com

SMTP_PASS = <Google App Password>

SMTP_FROM = addworkflu@gmail.com

SITE_URL = https://<current-app-domain>

Supabase → Authentication → URL Configuration: add ${SITE_URL}/auth/reset to Redirect URLs.

Supabase → Authentication → Sign In / Providers: Email enabled.

Logging & errors

Log and return the real Supabase error status/message (e.g., 429 rate limit) instead of generic 500.

Add audit log entry: admin triggered password reset for user X.

Acceptance criteria

Calling POST /api/admin/users/:id/reset-password returns { success:true }.

Email with a valid recovery action_link is delivered via our SMTP.

If Supabase rate limit is hit, API returns 429 with Supabase message (no 500).

No frontend Supabase calls are used for password reset.

Provide a short note with what changed and where (files/lines) + a screenshot of a successful reset email.