Please remove the current Replit OIDC auth and migrate the project to Supabase Auth (Email/Password).

Our team is ≤10 users, so the free tier is fine. Keep everything minimal and secure.

Objectives (non-negotiable)

Use Supabase Auth (Email/Password) as the only login method.

Preserve our existing RBAC (roles) and warehouse scopes (stay in our DB).

Provide an Admin Users page to create users, activate/deactivate, and trigger password reset.

Replace all Replit auth code, middleware, and SDK usage with Supabase equivalents.

Deliver tests and a rollback plan.

Deliverables

A) Supabase Setup

Create a Supabase project, enable Email/Password.

Add env vars:

SUPABASE_URL

SUPABASE_ANON_KEY (frontend)

SUPABASE_SERVICE_ROLE_KEY (backend only; never exposed to browser)

JWT_AUDIENCE (if needed)

Configure email templates for password reset (default is fine).

B) Backend Changes

Remove all Replit OIDC dependencies.

Add JWT verification middleware for Supabase tokens.

Extract user_id from Supabase JWT and map to our users table.

Keep RBAC & warehouse scoping exactly as is.

Admin service endpoints:

POST /api/admin/users → create user (email + temp password)

POST /api/admin/users/:id/reset-password → trigger Supabase reset email

PATCH /api/admin/users/:id/status → activate/deactivate

PATCH /api/admin/users/:id/display-name → update internal display name

C) Frontend Changes

Replace login flow with Supabase Email/Password.

Admin Users screen: create, activate/deactivate, reset password, edit display name.

Keep navigation, RBAC, and warehouse scoping intact.

D) Data Model & Migration

Keep current users table (roles, scopes).

Add auth_provider_user_id column.

Admin creates each user in Supabase and maps IDs.

Deactivate old Replit identities.

E) Removal & Cleanup

Remove all Replit auth code, secrets, and buttons.

Delete dead code paths.

F) Tests (must pass in CI)

Auth: login, logout, expired/invalid token.

RBAC: route access by role.

Scope: warehouse scoping.

Admin: create, deactivate, reset password.

Regression: FX, immutability, approvals.

G) Documentation

Update README with env vars and setup.

Admin Users page usage.

Rollback section.

Acceptance Criteria

Replit OIDC fully removed.

Users log in with Supabase Email/Password.

Admin can manage users as described.

All protected endpoints require Supabase JWT.

All tests green.

Demo video/screenshots:

Admin creates user → user logs in.

Admin deactivates user → access denied.

Admin triggers reset → user changes password and logs in.

Rollback Plan

Keep pre-supabase-auth branch.

Feature flag (AUTH_PROVIDER=supabase|replit) if needed.

Switch back if issues occur.

Deployment Checklist

Timeline & Milestones

Day 1–2: Supabase setup + env vars

Day 3–5: Backend auth migration + tests

Day 6–7: Frontend login + Admin Users page

Day 8: E2E tests + README + demo

Email Provider

Ensure SMTP or Supabase default email is configured for reset links.

Session Handling

Invalidate all old Replit sessions; only Supabase sessions remain.

Rate Limiting & Security

Add rate limiting for auth/admin endpoints.

Never expose SERVICE_ROLE_KEY.

Post-Migration Smoke Test

User login (normal user)

Access blocked without JWT

RBAC route access check per role

Admin deactivates user → blocked

Password reset flow works end-to-end